1.使用const std::string&可以避免传递实参时候的内存复制，提高程序运行效率，同时保证内部不会修改这个字符串。原则上也可以用std::string，但是会造成内存的多次复制，降低程序效率。
2.这是一个智能指针，能够自动回收内存，避免手动管理内存防止内存泄露和引用空指针。如果使用Token*，需要在其生命期结束之后进行delete，否则会造成内存泄漏，然而这样对于程序的书写是较为困难的
3.在token.cpp中把ostream中的<<操作符重载，使其输出token.toString()。*token获取该指针指向的Token对象的引用
4.抛出一个语法错误的类，SyntaxError，来显示错误
*5.deque是一个双端队列容器，它的内存不是线性的，对于在队列头尾的增删效率比vector高。对于频繁的插入和删除操作，用deque更高效
